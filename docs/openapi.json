{
  "openapi": "3.0.1",
  "info": {
    "title": "Document Management System API",
    "description": "API for document management system",
    "contact": {
      "name": "API Support",
      "url": "https://example.com/support",
      "email": "contact@example.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Development server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Senders",
      "description": "APIs for managing document sender organizations"
    },
    {
      "name": "User Management",
      "description": "APIs for managing users"
    },
    {
      "name": "WorkPlan",
      "description": "API quản lý kế hoạch công việc"
    },
    {
      "name": "Document Workflow",
      "description": "APIs for document workflow operations"
    },
    {
      "name": "Test",
      "description": "Endpoints for testing authentication and authorization"
    },
    {
      "name": "Departments",
      "description": "APIs for managing departments"
    },
    {
      "name": "Permissions",
      "description": "APIs for managing permissions"
    },
    {
      "name": "Outgoing Documents",
      "description": "APIs for managing outgoing documents"
    },
    {
      "name": "Schedule",
      "description": "API quản lý lịch công việc"
    },
    {
      "name": "Unified Documents",
      "description": "APIs for accessing documents in a frontend-friendly format"
    },
    {
      "name": "Notification API",
      "description": "Quản lý thông báo hệ thống"
    },
    {
      "name": "Dashboard",
      "description": "APIs for dashboard statistics and information"
    },
    {
      "name": "Work Cases",
      "description": "APIs for managing work cases"
    },
    {
      "name": "Authentication",
      "description": "APIs for authentication and registration"
    },
    {
      "name": "Incoming Documents",
      "description": "APIs for managing incoming documents"
    },
    {
      "name": "Roles",
      "description": "APIs for managing roles"
    }
  ],
  "paths": {
    "/api/workflow/{documentId}/update-outgoing": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Update outgoing document in workflow",
        "description": "Updates an outgoing document as part of workflow",
        "operationId": "updateOutgoingDocumentWorkflow",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FullOutgoingDocumentDTO"
                  },
                  "attachment": {
                    "type": "string",
                    "description": "File to replace existing attachment",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Document successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/submit": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Submit to leadership",
        "description": "Specialist submits document for leader approval",
        "operationId": "submitToLeadership",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to submit document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Document successfully submitted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/status": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get document status",
        "description": "Returns the current status of a document",
        "operationId": "getDocumentStatus",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentWorkflowDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentWorkflowDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentWorkflowDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Change document status",
        "description": "Changes the status of a document in the workflow",
        "operationId": "changeDocumentStatus",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Not authorized to change document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status transition",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Document status successfully changed",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/start-reviewing": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Start reviewing document",
        "description": "Leader starts reviewing document",
        "operationId": "startReviewingDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "description": "Comment leader/manager"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Not authorized to review document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Document review started",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/start-processing": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Start processing document",
        "description": "Specialist starts processing the document",
        "operationId": "startProcessingDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document processing started",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to process document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/register": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Register incoming document",
        "description": "Văn thư registers a newly received document",
        "operationId": "registerIncomingDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Not authorized to register document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Document successfully registered",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/publish": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Publish outgoing document",
        "description": "Văn thư publishes an outgoing document",
        "operationId": "publishOutgoingDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully published",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to publish document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/provide-feedback": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Provide feedback",
        "description": "Leader provides feedback on document",
        "operationId": "provideDocumentFeedback",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Feedback provided successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to provide feedback",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/forward-to-leadership": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Forward to leadership",
        "description": "Department head forwards document for leader approval",
        "operationId": "forwardToLeadership",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully forwarded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to forward document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/distribute": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Distribute document",
        "description": "Distribute document to relevant departments",
        "operationId": "distributeDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Distribution details"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to distribute document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Document successfully distributed",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/approve": {
      "put": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Approve document",
        "description": "Leader approves document",
        "operationId": "approveDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document approved successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to approve document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/{workPlanId}/tasks/{taskId}/status": {
      "put": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Cập nhật trạng thái nhiệm vụ",
        "description": "Cập nhật trạng thái của một nhiệm vụ trong kế hoạch",
        "operationId": "updateTaskStatus",
        "parameters": [
          {
            "name": "workPlanId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "taskId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "404": {
            "description": "Không tìm thấy kế hoạch hoặc nhiệm vụ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanTaskDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanTaskDTO"
                }
              }
            }
          },
          "200": {
            "description": "Cập nhật trạng thái thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanTaskDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanTaskDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/{id}": {
      "get": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Lấy chi tiết kế hoạch công việc",
        "description": "Trả về thông tin chi tiết của một kế hoạch công việc cụ thể",
        "operationId": "getWorkPlanById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy chi tiết kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Cập nhật kế hoạch công việc",
        "description": "Cập nhật thông tin một kế hoạch công việc đã tồn tại",
        "operationId": "updateWorkPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkPlanDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Không có quyền cập nhật kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "200": {
            "description": "Cập nhật kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Xóa kế hoạch công việc",
        "description": "Xóa một kế hoạch công việc",
        "operationId": "deleteWorkPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Xóa kế hoạch thành công"
          },
          "403": {
            "description": "Không có quyền xóa kế hoạch"
          },
          "404": {
            "description": "Không tìm thấy kế hoạch"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get user by ID",
        "description": "Returns a single user by ID. Requires ADMIN role or to be the user requested.",
        "operationId": "getUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update user",
        "description": "Updates a user's information. Requires ADMIN role or to be the user being updated.",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "User successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update this user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Management"
        ],
        "summary": "Delete user",
        "description": "Deletes a user by ID. Requires ADMIN role.",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User successfully deleted"
          },
          "403": {
            "description": "Not authorized to delete users"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/api/users/{id}/password": {
      "put": {
        "tags": [
          "User Management"
        ],
        "summary": "Update user password",
        "description": "Updates a user's password. Requires ADMIN role or to be the user being updated.",
        "operationId": "updatePassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to update password",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "New password"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid password provided",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update this user's password",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Password successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/senders/{id}": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Get sender by ID",
        "description": "Returns a sender by ID",
        "operationId": "getSenderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the sender to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved sender",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Sender not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Senders"
        ],
        "summary": "Update sender",
        "description": "Updates an existing sender organization",
        "operationId": "updateSender",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the sender to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SenderDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sender successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update senders",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Sender not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Senders"
        ],
        "summary": "Delete sender",
        "description": "Deletes a sender by ID",
        "operationId": "deleteSender",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the sender to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to delete senders"
          },
          "204": {
            "description": "Sender successfully deleted"
          },
          "404": {
            "description": "Sender not found"
          }
        }
      }
    },
    "/api/schedules/{id}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy chi tiết lịch công việc",
        "description": "Trả về thông tin chi tiết của một lịch công việc cụ thể",
        "operationId": "getScheduleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "200": {
            "description": "Lấy chi tiết lịch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schedule"
        ],
        "summary": "Cập nhật lịch công việc",
        "description": "Cập nhật thông tin một lịch công việc đã tồn tại",
        "operationId": "updateSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Không có quyền cập nhật lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "200": {
            "description": "Cập nhật lịch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedule"
        ],
        "summary": "Xóa lịch công việc",
        "description": "Xóa một lịch công việc",
        "operationId": "deleteSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Xóa lịch thành công"
          },
          "403": {
            "description": "Không có quyền xóa lịch"
          },
          "404": {
            "description": "Không tìm thấy lịch"
          }
        }
      }
    },
    "/api/permissions/{id}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get permission by ID",
        "description": "Returns a single permission by ID",
        "operationId": "getPermissionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the permission to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved permission",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Permissions"
        ],
        "summary": "Update a permission",
        "description": "Updates an existing custom permission",
        "operationId": "updatePermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the permission to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Not authorized to update permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "200": {
            "description": "Permission successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "400": {
            "description": "Cannot update system permission",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Permissions"
        ],
        "summary": "Delete a permission",
        "description": "Deletes a custom permission",
        "operationId": "deletePermission",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the permission to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to delete permissions"
          },
          "204": {
            "description": "Permission successfully deleted"
          },
          "400": {
            "description": "Cannot delete system permission"
          },
          "404": {
            "description": "Permission not found"
          }
        }
      }
    },
    "/api/documents/outgoing/{id}": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Get outgoing document by ID",
        "description": "Returns a single outgoing document by ID",
        "operationId": "getOutgoingDocumentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Update outgoing document",
        "description": "Updates an existing outgoing document",
        "operationId": "updateOutgoingDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutgoingDocumentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Delete outgoing document",
        "description": "Deletes an outgoing document by ID",
        "operationId": "deleteOutgoingDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to delete documents"
          },
          "404": {
            "description": "Document not found"
          },
          "204": {
            "description": "Document successfully deleted"
          }
        }
      }
    },
    "/api/documents/incoming/{id}": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Get incoming document by ID",
        "description": "Returns a single incoming document by ID",
        "operationId": "getIncomingDocumentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Update incoming document",
        "description": "Updates an existing incoming document",
        "operationId": "updateIncomingDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingDocumentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Delete incoming document",
        "description": "Deletes an incoming document by ID",
        "operationId": "deleteIncomingDocument",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to delete documents"
          },
          "404": {
            "description": "Document not found"
          },
          "204": {
            "description": "Document successfully deleted"
          }
        }
      }
    },
    "/api/departments/{id}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get department by ID",
        "description": "Returns a single department by ID",
        "operationId": "getDepartmentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the department to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved department",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Departments"
        ],
        "summary": "Update department",
        "description": "Updates an existing department",
        "operationId": "updateDepartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the department to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid department data",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          },
          "200": {
            "description": "Department successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to update departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Departments"
        ],
        "summary": "Delete department",
        "description": "Deletes a department by ID",
        "operationId": "deleteDepartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the department to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to delete departments"
          },
          "404": {
            "description": "Department not found"
          },
          "204": {
            "description": "Department successfully deleted"
          }
        }
      }
    },
    "/api/departments/{id}/parent": {
      "put": {
        "tags": [
          "department-hierarchy-controller"
        ],
        "operationId": "updateParentDepartment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/{id}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work case by ID",
        "description": "Returns a single work case by ID",
        "operationId": "getWorkCaseById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the work case to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view this work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Work case not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Update work case",
        "description": "Updates an existing work case",
        "operationId": "updateWorkCase",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the work case to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCaseDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Not authorized to update work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Work case not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "200": {
            "description": "Work case successfully updated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Delete work case",
        "description": "Deletes a work case by ID",
        "operationId": "deleteWorkCase",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the work case to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Work case successfully deleted"
          },
          "404": {
            "description": "Work case not found"
          },
          "403": {
            "description": "Not authorized to delete work cases"
          }
        }
      }
    },
    "/api/workflow/{documentId}/assign": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Assign document",
        "description": "Assigns a document to a user",
        "operationId": "assignDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully assigned",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document or user not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to assign document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/assign-specialist": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Assign to specialist",
        "description": "Department head assigns document to a specialist",
        "operationId": "assignToSpecialist",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentWorkflowDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully assigned",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document or user not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to assign document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/incoming/{incomingDocId}/reply": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Tạo văn bản đi trả lời cho văn bản đến",
        "description": "Tạo văn bản đi mới liên kết với văn bản đến, với đầy đủ quy trình trả lời",
        "operationId": "createResponseDocument",
        "parameters": [
          {
            "name": "incomingDocId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FullOutgoingDocumentDTO"
                  },
                  "attachments": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy văn bản đến",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "201": {
            "description": "Văn bản trả lời được tạo thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/full": {
      "post": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Create full document with workflow and distribution",
        "description": "Creates a full document with workflow and distribution",
        "operationId": "createFullIncomingDocument",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "data"
                ],
                "type": "object",
                "properties": {
                  "data": {
                    "$ref": "#/components/schemas/FullIncomingDocumentDTO"
                  },
                  "attachments": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Not authorized to create documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Document successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during creation",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans": {
      "get": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Lấy danh sách kế hoạch công việc",
        "description": "Trả về danh sách kế hoạch công việc, có thể lọc theo phòng ban và trạng thái",
        "operationId": "getAllWorkPlans",
        "parameters": [
          {
            "name": "departmentId",
            "in": "query",
            "description": "ID phòng ban",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Trạng thái kế hoạch (DRAFT, SUBMITTED, APPROVED, REJECTED)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Ngày bắt đầu",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "Ngày kết thúc",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkPlanDTO"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Lấy danh sách kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkPlanDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Tạo kế hoạch công việc mới",
        "description": "Tạo một kế hoạch công việc mới",
        "operationId": "createWorkPlan",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkPlanDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tạo kế hoạch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền tạo kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/reject": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Reject a pending user",
        "description": "Rejects and removes a user with PENDING_APPROVAL status. Requires ADMIN role.",
        "operationId": "rejectUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to reject",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully rejected",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to reject users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "User is not in pending approval status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/check-password": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Check current password",
        "description": "Kiểm tra xem mật khẩu hiện tại của người dùng có chính xác không",
        "operationId": "checkCurrentPassword",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID của người dùng",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Mật khẩu cần kiểm tra"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Not authorized to check this password",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Password check successful",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}/approve": {
      "post": {
        "tags": [
          "User Management"
        ],
        "summary": "Approve a pending user",
        "description": "Approves a user with PENDING_APPROVAL status. Requires ADMIN role.",
        "operationId": "approveUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to approve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to approve users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "User successfully approved",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "User is not in pending approval status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/senders": {
      "get": {
        "tags": [
          "Senders"
        ],
        "summary": "Get all senders",
        "description": "Returns a list of all document sender organizations",
        "operationId": "getAllSenders",
        "responses": {
          "200": {
            "description": "Successfully retrieved senders list",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SenderDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Senders"
        ],
        "summary": "Create new sender",
        "description": "Creates a new sender organization",
        "operationId": "createSender",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SenderDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Sender successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create senders",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/SenderDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách lịch công việc",
        "description": "Trả về danh sách lịch công việc, có thể lọc theo phòng ban và trạng thái",
        "operationId": "getSchedules",
        "parameters": [
          {
            "name": "departmentId",
            "in": "query",
            "description": "ID phòng ban",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Trạng thái lịch (DRAFT, SUBMITTED, APPROVED, REJECTED)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Từ ngày",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Đến ngày",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách lịch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageScheduleDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Tạo lịch công việc mới",
        "description": "Tạo một lịch công việc mới",
        "operationId": "createSchedule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScheduleDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Tạo lịch thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền tạo lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/{id}/reject": {
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Từ chối lịch",
        "description": "Từ chối lịch đã được gửi",
        "operationId": "rejectSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Từ chối thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền từ chối",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/{id}/approve": {
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Phê duyệt lịch",
        "description": "Phê duyệt lịch đã được gửi",
        "operationId": "approveSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Không có quyền phê duyệt",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "200": {
            "description": "Phê duyệt thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get all permissions",
        "description": "Returns a list of all permissions",
        "operationId": "getAllPermissions",
        "responses": {
          "200": {
            "description": "Successfully retrieved permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Permissions"
        ],
        "summary": "Create a new permission",
        "description": "Creates a new custom permission",
        "operationId": "createPermission",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PermissionDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Permission successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{id}/multiple-attachments": {
      "post": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Upload multiple document attachments",
        "description": "Uploads multiple file attachments for any document type",
        "operationId": "uploadMultipleAttachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "Files to upload",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Files successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{id}/attachments": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Download document attachment",
        "description": "Downloads a file attachment for any document type",
        "operationId": "downloadDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Upload document attachment",
        "description": "Uploads a file attachment for any document type",
        "operationId": "uploadDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Delete document attachment",
        "description": "Deletes a file attachment from any document type",
        "operationId": "deleteDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error during deletion",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "204": {
            "description": "Attachment successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to delete attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{documentId}/workflow/status": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get document workflow status",
        "description": "Returns the current workflow status of a document",
        "operationId": "getDocumentWorkflowStatus",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Change document workflow status",
        "description": "Changes the workflow status of a document",
        "operationId": "changeDocumentWorkflowStatus",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Status change details"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Status successfully changed",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to change document status",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid status transition",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{documentId}/workflow/assign": {
      "post": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Assign document to user",
        "description": "Assigns a document to a user for processing",
        "operationId": "assignDocumentToUser",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Assignment details"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Document successfully assigned",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to assign documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{documentId}/comments": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get document comments",
        "description": "Retrieves all comments for any document type",
        "operationId": "getDocumentComments",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Comment type filter",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view comments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Comments successfully retrieved",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Add comment to document",
        "description": "Adds a comment to any document type",
        "operationId": "addDocumentComment",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "description": "Comment data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid comment data",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to add comments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Comment successfully added",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Get all outgoing documents",
        "description": "Returns a paginated list of all outgoing documents",
        "operationId": "getAllOutgoingDocuments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOutgoingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Create new outgoing document",
        "description": "Creates a new outgoing document",
        "operationId": "createOutgoingDocument",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutgoingDocumentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Not authorized to create documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          },
          "201": {
            "description": "Document successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/{id}/attachments": {
      "post": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Upload multiple document attachments",
        "description": "Uploads multiple file attachments for an outgoing document",
        "operationId": "uploadMultipleAttachments_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "Files to upload",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Files successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/{id}/attachment": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Download document attachment",
        "description": "Downloads a file attachment for an outgoing document",
        "operationId": "downloadOutgoingDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Upload document attachment",
        "description": "Uploads a file attachment for an outgoing document",
        "operationId": "uploadOutgoingDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/OutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Get all incoming documents",
        "description": "Returns a paginated list of all incoming documents",
        "operationId": "getAllIncomingDocuments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageIncomingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Create new incoming document",
        "description": "Creates a new incoming document",
        "operationId": "createIncomingDocument",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingDocumentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Not authorized to create documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          },
          "201": {
            "description": "Document successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/{id}/attachments": {
      "post": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Upload multiple document attachments",
        "description": "Uploads multiple file attachments for an incoming document",
        "operationId": "uploadMultipleAttachments_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "files"
                ],
                "type": "object",
                "properties": {
                  "files": {
                    "type": "array",
                    "description": "Files to upload",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "200": {
            "description": "Files successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/{id}/attachment": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Download document attachment",
        "description": "Downloads a file attachment for an incoming document",
        "operationId": "downloadIncomingDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Upload document attachment",
        "description": "Uploads a file attachment for an incoming document",
        "operationId": "uploadIncomingDocumentAttachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "file"
                ],
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "description": "File to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "File successfully uploaded",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to upload attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during upload",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/IncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get all departments",
        "description": "Returns a paginated list of all departments",
        "operationId": "getAllDepartments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDepartmentDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Create new department",
        "description": "Creates a new department",
        "operationId": "createDepartment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "400": {
            "description": "Invalid department data",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          },
          "201": {
            "description": "Department successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get all work cases",
        "description": "Returns a paginated list of all work cases",
        "operationId": "getAllWorkCases",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageWorkCaseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageWorkCaseDTO"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Create new work case",
        "description": "Creates a new work case",
        "operationId": "createWorkCase",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkCaseDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Work case successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to create work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/{caseId}/documents/{documentId}": {
      "post": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Add document to work case",
        "description": "Adds a document to a work case",
        "operationId": "addDocumentToCase",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "ID of the work case",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document to add",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to modify work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "200": {
            "description": "Document successfully added to work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Work case or document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Remove document from work case",
        "description": "Removes a document from a work case",
        "operationId": "removeDocumentFromCase",
        "parameters": [
          {
            "name": "caseId",
            "in": "path",
            "description": "ID of the work case",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document to remove",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Document successfully removed from work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to modify work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Work case or document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Register new user",
        "description": "Creates a new user account",
        "operationId": "register",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during registration",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Username or email already exists",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "User login",
        "description": "Authenticates a user and returns a JWT token",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successfully authenticated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Account is disabled",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/{id}/submit": {
      "patch": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Gửi kế hoạch để phê duyệt",
        "description": "Chuyển trạng thái kế hoạch sang SUBMITTED để đợi phê duyệt",
        "operationId": "submitWorkPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gửi thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "400": {
            "description": "Không thể gửi (ví dụ: kế hoạch không ở trạng thái DRAFT)",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền gửi kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/work-plans/{id}/approve": {
      "patch": {
        "tags": [
          "WorkPlan"
        ],
        "summary": "Phê duyệt hoặc từ chối kế hoạch",
        "description": "Phê duyệt hoặc từ chối kế hoạch đã được gửi",
        "operationId": "approveWorkPlan",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "403": {
            "description": "Không có quyền phê duyệt kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "400": {
            "description": "Không thể phê duyệt (ví dụ: kế hoạch không ở trạng thái SUBMITTED)",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "200": {
            "description": "Phê duyệt/từ chối thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy kế hoạch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkPlanDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/{id}/submit": {
      "patch": {
        "tags": [
          "Schedule"
        ],
        "summary": "Gửi lịch để phê duyệt",
        "description": "Chuyển trạng thái lịch sang SUBMITTED để đợi phê duyệt",
        "operationId": "submitSchedule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Gửi thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "400": {
            "description": "Không thể gửi (ví dụ: lịch không ở trạng thái DRAFT)",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền gửi lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/events/{eventId}/attendance": {
      "patch": {
        "tags": [
          "Schedule"
        ],
        "summary": "Cập nhật trạng thái tham dự sự kiện",
        "description": "Cập nhật trạng thái tham dự của một người dùng cho sự kiện",
        "operationId": "updateAttendanceStatus",
        "parameters": [
          {
            "name": "eventId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cập nhật trạng thái tham dự thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Dữ liệu không hợp lệ",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy sự kiện",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Không có quyền cập nhật",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/history": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get document history",
        "description": "Returns the workflow history of a document",
        "operationId": "getDocumentHistory",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document history",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentHistoryDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document history",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentHistoryDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentHistoryDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/workflow/{documentId}/departments": {
      "get": {
        "tags": [
          "Document Workflow"
        ],
        "summary": "Get document departments",
        "description": "Get departments assigned to process a document",
        "operationId": "getDocumentDepartments",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view document departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentDepartmentDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentDepartmentDTO"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved department list",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DocumentDepartmentDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get all users",
        "description": "Returns a list of all users. Requires ADMIN role.",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Successfully retrieved all users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/username/{username}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get user by username",
        "description": "Returns a single user by username. Requires ADMIN role or to be the user requested.",
        "operationId": "getUserByUsername",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Username of the user to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this user",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/statuses": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get available user statuses",
        "description": "Returns all available user statuses with their values and display names. Useful for UI dropdowns.",
        "operationId": "getAvailableStatuses",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/roles": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get available user roles",
        "description": "Returns all available user roles with their codes and display names. Useful for UI dropdowns.",
        "operationId": "getAvailableRoles",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/pending": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get all pending users",
        "description": "Returns a list of all users with PENDING_APPROVAL status. Requires ADMIN role.",
        "operationId": "getPendingUsers",
        "responses": {
          "403": {
            "description": "Not authorized to view pending users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved pending users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/filter": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get users by role or status",
        "description": "Returns a filtered list of users by role and/or status. Requires ADMIN role.",
        "operationId": "getUsersByFilter",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "description": "Role to filter by. Can be either role code (ROLE_ADMIN), display name (Trưởng phòng), or enum name (DEPARTMENT_HEAD). See /api/users/roles endpoint for available roles.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ADMIN",
                "USER",
                "EDITOR",
                "TRUONG_PHONG",
                "PHO_PHONG",
                "CUC_TRUONG",
                "CUC_PHO",
                "NHAN_VIEN",
                "TRO_LY",
                "VAN_THU",
                "CHINH_UY",
                "PHO_CHINH_UY",
                "TRAM_TRUONG",
                "PHO_TRAM_TRUONG",
                "CHINH_TRI_VIEN_TRAM",
                "CUM_TRUONG",
                "PHO_CUM_TRUONG",
                "CHINH_TRI_VIEN_CUM",
                "TRUONG_BAN"
              ]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status to filter by. Can be status value (0,1,2,3), display name (Active), or enum name (ACTIVE). See /api/users/statuses endpoint for available statuses.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "INACTIVE",
                "ACTIVE",
                "BLOCKED",
                "PENDING_APPROVAL"
              ]
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved filtered users",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/department/{departmentId}": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get users by department ID",
        "description": "Returns a list of users by department ID. Requires ADMIN role.",
        "operationId": "getUsersByDepartmentId",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the department to retrieve users from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view users by department",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved users by department ID",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/department/{departmentId}/roles": {
      "get": {
        "tags": [
          "User Management"
        ],
        "summary": "Get users by department ID and roles",
        "description": "Returns a list of users by department ID and roles. Requires ADMIN role.",
        "operationId": "getUsersByDepartmentIdAndRoles",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the department to retrieve users from",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "roles",
            "in": "query",
            "description": "Roles to filter by",
            "required": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved users by department ID and roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view users by department and roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/test/public": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Public endpoint",
        "description": "A public endpoint that doesn't require authentication",
        "operationId": "publicEndpoint",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/test/auth": {
      "get": {
        "tags": [
          "Test"
        ],
        "summary": "Test authentication",
        "description": "Returns information about the current authenticated user",
        "operationId": "testAuth",
        "responses": {
          "200": {
            "description": "Successfully authenticated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Not authenticated",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/{id}/related": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách lịch liên quan",
        "description": "Trả về danh sách lịch công việc liên quan tới lịch hiện tại",
        "operationId": "getRelatedSchedules",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Không tìm thấy lịch",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleDTO"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Lấy danh sách lịch liên quan thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/events": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách sự kiện",
        "description": "Trả về danh sách sự kiện theo các tham số",
        "operationId": "getScheduleEvents",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Ngày sự kiện",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "excludeId",
            "in": "query",
            "description": "Loại trừ ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "departmentId",
            "in": "query",
            "description": "ID phòng ban",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy danh sách sự kiện thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleEventDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/events/{id}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy chi tiết sự kiện",
        "description": "Trả về thông tin chi tiết của một sự kiện cụ thể",
        "operationId": "getEventById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lấy chi tiết sự kiện thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleEventDTO"
                }
              }
            }
          },
          "404": {
            "description": "Không tìm thấy sự kiện",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleEventDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/events/monthly": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách sự kiện trong tháng",
        "description": "Trả về danh sách sự kiện cho một tháng cụ thể",
        "operationId": "getMonthlyEvents",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Năm",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Tháng (1-12)",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "departmentId",
            "in": "query",
            "description": "ID phòng ban (tùy chọn)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID người dùng (tùy chọn)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ScheduleEventDTO"
                    }
                  }
                }
              }
            }
          },
          "200": {
            "description": "Lấy danh sách sự kiện thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ScheduleEventDTO"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/schedules/events/daily": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Lấy danh sách sự kiện trong ngày",
        "description": "Trả về danh sách sự kiện cho một ngày cụ thể",
        "operationId": "getDailyEvents",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Ngày cần lấy sự kiện (định dạng YYYY-MM-DD)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "departmentId",
            "in": "query",
            "description": "ID phòng ban (tùy chọn)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "userId",
            "in": "query",
            "description": "ID người dùng (tùy chọn)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Không có quyền truy cập",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleEventDTO"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Lấy danh sách sự kiện thành công",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleEventDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get all roles",
        "description": "Returns a list of all roles",
        "operationId": "getAllRoles",
        "responses": {
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDTO"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoleDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/{id}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role by ID",
        "description": "Returns a single role by ID",
        "operationId": "getRoleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the role to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/roles/name/{name}": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "Get role by name",
        "description": "Returns a single role by name",
        "operationId": "getRoleByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the role to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view roles",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              }
            }
          },
          "404": {
            "description": "Role not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved role",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/RoleDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/system": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get system permissions",
        "description": "Returns all system permissions",
        "operationId": "getSystemPermissions",
        "responses": {
          "200": {
            "description": "Successfully retrieved permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/name/{name}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get permission by name",
        "description": "Returns a single permission by name",
        "operationId": "getPermissionByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "Name of the permission to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "404": {
            "description": "Permission not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved permission",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/custom": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get custom permissions",
        "description": "Returns all custom permissions",
        "operationId": "getCustomPermissions",
        "responses": {
          "200": {
            "description": "Successfully retrieved permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/permissions/category/{category}": {
      "get": {
        "tags": [
          "Permissions"
        ],
        "summary": "Get permissions by category",
        "description": "Returns permissions filtered by category",
        "operationId": "getPermissionsByCategory",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "description": "Category to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view permissions",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/notifications": {
      "get": {
        "tags": [
          "Notification API"
        ],
        "summary": "Lấy danh sách thông báo",
        "description": "Trả về danh sách thông báo phân trang",
        "operationId": "getUserNotifications",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageNotification"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get all documents",
        "description": "Returns a paginated list of all documents in unified format",
        "operationId": "getAllDocuments",
        "parameters": [
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUnifiedDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUnifiedDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{id}": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get document by ID",
        "description": "Returns a single document in unified format",
        "operationId": "getDocumentById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedDocumentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/UnifiedDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/{documentId}/workflow/history": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get document workflow history",
        "description": "Returns the workflow history of a document",
        "operationId": "getDocumentWorkflowHistory",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document history",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view document history",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/stats": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Get document statistics",
        "description": "Get document counts by type and status",
        "operationId": "getDocumentStats",
        "responses": {
          "200": {
            "description": "Successfully retrieved statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/search": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Search documents",
        "description": "Search all documents by keyword",
        "operationId": "searchDocuments",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUnifiedDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/by-date": {
      "get": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Find documents by date range",
        "description": "Find all documents within a date range",
        "operationId": "findByDateRange",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date (inclusive)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date (inclusive)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageUnifiedDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/search": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Search outgoing documents",
        "description": "Search outgoing documents by keyword",
        "operationId": "searchOutgoingDocuments",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/related": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Get related documents",
        "description": "Returns a list of related documents",
        "operationId": "getRelatedDocuments",
        "parameters": [
          {
            "name": "relatedDocuments",
            "in": "query",
            "description": "Related documents to search for (encoded if contains commas)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved related documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutgoingDocumentDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view related documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutgoingDocumentDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OutgoingDocumentDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/incoming-attachment/{incomingDocumentId}": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Download incoming document attachment",
        "description": "Downloads a file attachment from a related incoming document",
        "operationId": "downloadIncomingAttachment",
        "parameters": [
          {
            "name": "incomingDocumentId",
            "in": "path",
            "description": "ID of the incoming document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error during download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "200": {
            "description": "File ready for download",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to download attachments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "404": {
            "description": "Document or attachment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/document-type": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Find documents by type",
        "description": "Returns documents matching a specific document type",
        "operationId": "findByDocumentType",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "Document type to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/outgoing/date-range": {
      "get": {
        "tags": [
          "Outgoing Documents"
        ],
        "summary": "Find documents by date range",
        "description": "Returns documents within a specific date range",
        "operationId": "findByDateRange_1",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageOutgoingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/{documentId}/departments": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Get departments assignt document by ID",
        "description": "Returns a list of departments by document ID",
        "operationId": "getDepartmentsByDocumentId",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentDTO"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Document not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentDTO"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view this document",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DepartmentDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/urgency-level": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Find documents by urgency level",
        "description": "Returns documents matching a specific urgency level",
        "operationId": "findByUrgencyLevel",
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "description": "Urgency level to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/search": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Search incoming documents",
        "description": "Search incoming documents by keyword",
        "operationId": "searchIncomingDocuments",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/processing-status": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Find documents by processing status",
        "description": "Returns documents with a specific processing status",
        "operationId": "findByProcessingStatus",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "Processing status to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/department/{departmentId}": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Get all documents by department ID",
        "description": "Returns a list of documents assigned to a specific department",
        "operationId": "getAllDocumentsByDepartmentId",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the department",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view this department's documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageIncomingDocumentDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageIncomingDocumentDTO"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/incoming/date-range": {
      "get": {
        "tags": [
          "Incoming Documents"
        ],
        "summary": "Find documents by date range",
        "description": "Returns documents within a specific date range",
        "operationId": "findByDateRange_2",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "description": "Start date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "description": "End date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved documents",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageIncomingDocumentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/{id}/children": {
      "get": {
        "tags": [
          "department-hierarchy-controller"
        ],
        "operationId": "getChildDepartments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/types": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get department types",
        "description": "Returns a list of available department types and their descriptions",
        "operationId": "getDepartmentTypes",
        "responses": {
          "403": {
            "description": "Not authorized to view department types",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved department types",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/type/{typeCode}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Find departments by type",
        "description": "Returns departments matching a specific type",
        "operationId": "findDepartmentsByType",
        "parameters": [
          {
            "name": "typeCode",
            "in": "path",
            "description": "Department type code to filter by",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDepartmentDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid department type",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/statistics": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get department statistics",
        "description": "Returns statistics about departments",
        "operationId": "getDepartmentStatistics",
        "responses": {
          "200": {
            "description": "Successfully retrieved statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/search": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Search departments",
        "description": "Search departments by name or abbreviation",
        "operationId": "searchDepartments",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to search departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/hierarchy": {
      "get": {
        "tags": [
          "department-hierarchy-controller"
        ],
        "operationId": "getDepartmentHierarchy",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/departments/group/{group}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Find departments by group",
        "description": "Returns departments belonging to a specific group",
        "operationId": "findDepartmentsByGroup",
        "parameters": [
          {
            "name": "group",
            "in": "path",
            "description": "Department group to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDepartmentDTO"
                }
              }
            }
          },
          "403": {
            "description": "Not authorized to view departments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDepartmentDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get system dashboard statistics",
        "description": "Returns overall system dashboard statistics",
        "operationId": "getSystemDashboardStatistics",
        "responses": {
          "200": {
            "description": "Successfully retrieved system dashboard statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/user/{userId}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get user dashboard statistics",
        "description": "Returns dashboard statistics for a specific user",
        "operationId": "getUserDashboardStatistics",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user dashboard statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardDTO"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/schedules/today": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get today's schedule events",
        "description": "Returns schedule events for today or a specified date",
        "operationId": "getTodayScheduleEvents",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Optional date parameter (yyyy-MM-dd)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved schedule events",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScheduleEventDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/me": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get current user's dashboard statistics",
        "description": "Returns dashboard statistics for the current authenticated user",
        "operationId": "getCurrentUserDashboardStatistics",
        "responses": {
          "404": {
            "description": "Current user not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved current user's dashboard statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/dashboard/department/{departmentId}": {
      "get": {
        "tags": [
          "Dashboard"
        ],
        "summary": "Get department dashboard statistics",
        "description": "Returns dashboard statistics for a specific department",
        "operationId": "getDepartmentDashboardStatistics",
        "parameters": [
          {
            "name": "departmentId",
            "in": "path",
            "description": "ID of the department",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Department not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved department dashboard statistics",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/DashboardDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/status/{status}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work cases by status",
        "description": "Returns work cases with a specific status",
        "operationId": "getWorkCasesByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "Status to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCaseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/search": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Search work cases",
        "description": "Search work cases by keyword",
        "operationId": "searchWorkCases",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageable",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Pageable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search completed successfully",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/PageWorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/priority/{priority}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work cases by priority",
        "description": "Returns work cases with a specific priority",
        "operationId": "getWorkCasesByPriority",
        "parameters": [
          {
            "name": "priority",
            "in": "path",
            "description": "Priority to filter by",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCaseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/overdue": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get overdue cases",
        "description": "Returns work cases past their deadline",
        "operationId": "getOverdueCases",
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCaseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/creator/{creatorId}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work cases by creator",
        "description": "Returns work cases created by a specific user",
        "operationId": "getWorkCasesByCreator",
        "parameters": [
          {
            "name": "creatorId",
            "in": "path",
            "description": "ID of the creator",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCaseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/code/{caseCode}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work case by case code",
        "description": "Returns a single work case by case code",
        "operationId": "getWorkCaseByCaseCode",
        "parameters": [
          {
            "name": "caseCode",
            "in": "path",
            "description": "Case code of the work case to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to view this work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved work case",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          },
          "404": {
            "description": "Work case not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkCaseDTO"
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/by-document/{documentId}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work cases by document",
        "description": "Returns work cases related to a specific document",
        "operationId": "getWorkCasesByDocument",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "ID of the document",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCaseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/cases/assignee/{assigneeId}": {
      "get": {
        "tags": [
          "Work Cases"
        ],
        "summary": "Get work cases by assignee",
        "description": "Returns work cases assigned to a specific user",
        "operationId": "getWorkCasesByAssignee",
        "parameters": [
          {
            "name": "assigneeId",
            "in": "path",
            "description": "ID of the assignee",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved work cases",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkCaseDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/api/documents/unified/comments/{commentId}": {
      "delete": {
        "tags": [
          "Unified Documents"
        ],
        "summary": "Delete document comment",
        "description": "Deletes a comment from any document type",
        "operationId": "deleteDocumentComment",
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "description": "ID of the comment",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "403": {
            "description": "Not authorized to delete comments",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "204": {
            "description": "Comment successfully deleted",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "404": {
            "description": "Comment not found",
            "content": {
              "application/hal+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "typeCode": {
            "type": "integer",
            "format": "int32"
          },
          "externalId": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "parentDepartment": {
            "$ref": "#/components/schemas/Department"
          },
          "childDepartments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Department"
            }
          },
          "assignedDocuments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDepartment"
            }
          }
        }
      },
      "Document": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "version": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "REGISTERED",
              "DISTRIBUTED",
              "DEPT_ASSIGNED",
              "PENDING_APPROVAL",
              "SPECIALIST_PROCESSING",
              "SPECIALIST_SUBMITTED",
              "LEADER_REVIEWING",
              "LEADER_APPROVED",
              "LEADER_COMMENTED",
              "PUBLISHED",
              "COMPLETED",
              "REJECTED",
              "ARCHIVED",
              "HEADER_DEPARTMENT_REVIEWING",
              "HEADER_DEPARTMENT_APPROVED",
              "HEADER_DEPARTMENT_COMMENTED"
            ]
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "changed": {
            "type": "string",
            "format": "date-time"
          },
          "attachmentFilename": {
            "type": "string"
          },
          "documentNumber": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "signingDate": {
            "type": "string",
            "format": "date-time"
          },
          "processDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "assignedDepartments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentDepartment"
            }
          },
          "history": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentHistory"
            }
          }
        }
      },
      "DocumentDepartment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "department": {
            "$ref": "#/components/schemas/Department"
          },
          "comments": {
            "type": "string"
          },
          "assignedDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "assignedBy": {
            "$ref": "#/components/schemas/User"
          },
          "processingStatus": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          }
        }
      },
      "DocumentHistory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          },
          "action": {
            "type": "string"
          },
          "previousStatus": {
            "type": "string"
          },
          "newStatus": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "primaryDepartment": {
            "$ref": "#/components/schemas/Department"
          },
          "assignedTo": {
            "$ref": "#/components/schemas/User"
          },
          "performedBy": {
            "$ref": "#/components/schemas/User"
          },
          "collaboratingDepartments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Department"
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "pass": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "mail": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastAccess": {
            "type": "string",
            "format": "date-time"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "department": {
            "$ref": "#/components/schemas/Department"
          },
          "userStatus": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "PENDING_APPROVAL"
            ]
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string",
            "enum": [
              "STATUS_CHANGE",
              "DEADLINE_REMINDER",
              "NEW_DOCUMENT",
              "ASSIGNMENT",
              "NEW_COMMENT",
              "DOCUMENT_UPDATE"
            ]
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "read": {
            "type": "boolean"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "document": {
            "$ref": "#/components/schemas/Document"
          }
        }
      },
      "DocumentWorkflowDTO": {
        "type": "object",
        "properties": {
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "action": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "statusDisplayName": {
            "type": "string"
          },
          "assignedToId": {
            "type": "integer",
            "format": "int64"
          },
          "assignedToIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "assignedToNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "primaryDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "primaryDepartmentName": {
            "type": "string"
          },
          "collaboratingDepartmentIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "collaboratingDepartmentNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedToName": {
            "type": "string"
          },
          "closureDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "comments": {
            "type": "string"
          }
        },
        "description": "Workflow details"
      },
      "FullOutgoingDocumentDTO": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/OutgoingDocumentDTO"
          },
          "workflow": {
            "$ref": "#/components/schemas/DocumentWorkflowDTO"
          },
          "incomingDocumentId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "description": "Document details"
      },
      "OutgoingDocumentDTO": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "statusDisplayName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "documentNumber": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "signerId": {
            "type": "integer",
            "format": "int64"
          },
          "summary": {
            "type": "string"
          },
          "signerName": {
            "type": "string"
          },
          "signerPosition": {
            "type": "string"
          },
          "signingDate": {
            "type": "string",
            "format": "date-time"
          },
          "draftingDepartment": {
            "type": "string"
          },
          "draftingDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "relatedDocuments": {
            "type": "string"
          },
          "storageLocation": {
            "type": "integer",
            "format": "int32"
          },
          "documentVolume": {
            "type": "string"
          },
          "emailAddress": {
            "type": "string"
          },
          "receivingDepartmentText": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "creator": {
            "$ref": "#/components/schemas/User"
          },
          "changed": {
            "type": "string",
            "format": "date-time"
          },
          "attachmentFilename": {
            "type": "string"
          }
        },
        "description": "Document details"
      },
      "WorkPlanTaskDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "assignee": {
            "type": "string"
          },
          "assigneeId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "workPlanId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DocumentLinkDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "WorkPlanDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string"
          },
          "createdBy": {
            "type": "string"
          },
          "createdById": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkPlanTaskDTO"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentLinkDTO"
            }
          }
        }
      },
      "UserDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "username": {
            "type": "string"
          },
          "pass": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "userStatus": {
            "type": "string",
            "enum": [
              "INACTIVE",
              "ACTIVE",
              "BLOCKED",
              "PENDING_APPROVAL"
            ]
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "lastAccess": {
            "type": "string",
            "format": "date-time"
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentName": {
            "type": "string"
          },
          "roles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "userRoles": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ADMIN",
                "USER",
                "EDITOR",
                "TRUONG_PHONG",
                "PHO_PHONG",
                "CUC_TRUONG",
                "CUC_PHO",
                "NHAN_VIEN",
                "TRO_LY",
                "VAN_THU",
                "CHINH_UY",
                "PHO_CHINH_UY",
                "TRAM_TRUONG",
                "PHO_TRAM_TRUONG",
                "CHINH_TRI_VIEN_TRAM",
                "CUM_TRUONG",
                "PHO_CUM_TRUONG",
                "CHINH_TRI_VIEN_CUM",
                "TRUONG_BAN"
              ]
            }
          },
          "statusDisplayName": {
            "type": "string"
          },
          "roleDisplayNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "User registration details"
      },
      "SenderDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "description": "Sender details"
      },
      "ScheduleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentName": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "period": {
            "type": "string"
          },
          "createdById": {
            "type": "integer",
            "format": "int64"
          },
          "createdByName": {
            "type": "string"
          },
          "approvedById": {
            "type": "integer",
            "format": "int64"
          },
          "approvedByName": {
            "type": "string"
          },
          "approvalDate": {
            "type": "string",
            "format": "date-time"
          },
          "approvalComments": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleEventDTO"
            }
          }
        }
      },
      "ScheduleEventDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "startTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "endTime": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "location": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "participants": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "participantNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "scheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "PermissionDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "systemPermission": {
            "type": "boolean"
          }
        },
        "description": "Permission details"
      },
      "DepartmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "abbreviation": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "ADMINISTRATIVE",
              "PROFESSIONAL",
              "SUPPORT",
              "SUBSIDIARY",
              "LEADERSHIP"
            ]
          },
          "externalId": {
            "type": "string"
          },
          "group": {
            "type": "string"
          },
          "userCount": {
            "type": "integer",
            "format": "int32"
          },
          "assignedDocumentsCount": {
            "type": "integer",
            "format": "int32"
          },
          "parentDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "parentDepartmentName": {
            "type": "string"
          },
          "childDepartments": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentDTO"
            }
          },
          "storageLocation": {
            "type": "string"
          },
          "typeName": {
            "type": "string"
          },
          "typeCode": {
            "type": "integer",
            "format": "int32"
          }
        },
        "description": "Department details"
      },
      "IncomingDocumentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "documentNumber": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "issuingAuthority": {
            "type": "string"
          },
          "urgencyLevel": {
            "type": "string"
          },
          "securityLevel": {
            "type": "string"
          },
          "summary": {
            "type": "string"
          },
          "notes": {
            "type": "string"
          },
          "signingDate": {
            "type": "string",
            "format": "date"
          },
          "receivedDate": {
            "type": "string",
            "format": "date"
          },
          "processingStatus": {
            "type": "string"
          },
          "displayStatus": {
            "type": "string"
          },
          "closureRequest": {
            "type": "boolean"
          },
          "closureDeadline": {
            "type": "string",
            "format": "date-time"
          },
          "sendingDepartmentName": {
            "type": "string"
          },
          "collaboratingDepartmentNames": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "collaboratingDepartmentIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "emailSource": {
            "type": "string"
          },
          "primaryProcessDepartmentId": {
            "type": "integer",
            "format": "int64"
          },
          "primaryProcessor": {
            "$ref": "#/components/schemas/DepartmentDTO"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "changed": {
            "type": "string",
            "format": "date-time"
          },
          "attachmentFilename": {
            "type": "string"
          },
          "storageLocation": {
            "type": "string"
          }
        },
        "description": "Document details"
      },
      "WorkCaseDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "caseCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "priority": {
            "type": "string"
          },
          "deadline": {
            "type": "string",
            "format": "date-time"
          },
          "createdDate": {
            "type": "string",
            "format": "date-time"
          },
          "lastModifiedDate": {
            "type": "string",
            "format": "date-time"
          },
          "createdById": {
            "type": "integer",
            "format": "int64"
          },
          "createdByName": {
            "type": "string"
          },
          "assignedToId": {
            "type": "integer",
            "format": "int64"
          },
          "assignedToName": {
            "type": "string"
          },
          "progress": {
            "type": "integer",
            "format": "int32"
          },
          "tags": {
            "type": "string"
          },
          "documentIds": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "description": "Work case details"
      },
      "FullIncomingDocumentDTO": {
        "type": "object",
        "properties": {
          "document": {
            "$ref": "#/components/schemas/IncomingDocumentDTO"
          },
          "workflow": {
            "$ref": "#/components/schemas/DocumentWorkflowDTO"
          }
        },
        "description": "Document details"
      },
      "AuthRequest": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "description": "Login credentials"
      },
      "DocumentHistoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "documentTitle": {
            "type": "string"
          },
          "action": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "previousStatus": {
            "type": "string"
          },
          "previousStatusDisplayName": {
            "type": "string"
          },
          "newStatus": {
            "type": "string"
          },
          "newStatusDisplayName": {
            "type": "string"
          },
          "actorId": {
            "type": "integer",
            "format": "int64"
          },
          "actorName": {
            "type": "string"
          },
          "assignedToNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "assignedToId": {
            "type": "integer",
            "format": "int64"
          },
          "assignedToName": {
            "type": "string"
          }
        }
      },
      "DocumentDepartmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "documentTitle": {
            "type": "string"
          },
          "departmentId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentName": {
            "type": "string"
          },
          "comments": {
            "type": "string"
          },
          "assignedDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "assignedById": {
            "type": "integer",
            "format": "int64"
          },
          "assignedByName": {
            "type": "string"
          },
          "processingStatus": {
            "type": "string"
          },
          "primary": {
            "type": "boolean"
          }
        }
      },
      "Pageable": {
        "type": "object",
        "properties": {
          "page": {
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "PageScheduleDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScheduleDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageableObject": {
        "type": "object",
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          },
          "offset": {
            "type": "integer",
            "format": "int64"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "unpaged": {
            "type": "boolean"
          },
          "paged": {
            "type": "boolean"
          }
        }
      },
      "SortObject": {
        "type": "object",
        "properties": {
          "sorted": {
            "type": "boolean"
          },
          "empty": {
            "type": "boolean"
          },
          "unsorted": {
            "type": "boolean"
          }
        }
      },
      "RoleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "userCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PageNotification": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Notification"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "DocumentAttachmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "type": "string"
          },
          "uploadDate": {
            "type": "string"
          },
          "uploadedBy": {
            "type": "string"
          }
        }
      },
      "DocumentCommentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "documentId": {
            "type": "integer",
            "format": "int64"
          },
          "documentTitle": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "userName": {
            "type": "string"
          },
          "userAvatar": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "PageUnifiedDocumentDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UnifiedDocumentDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "UnifiedDocumentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "string"
          },
          "referenceNumber": {
            "type": "string"
          },
          "referenceDate": {
            "type": "string"
          },
          "issuingAgency": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "processingDepartmentId": {
            "type": "string"
          },
          "processingDepartment": {
            "type": "string"
          },
          "receivedDate": {
            "type": "string"
          },
          "receivedTime": {
            "type": "string"
          },
          "securityLevel": {
            "type": "string"
          },
          "urgencyLevel": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "hasAttachment": {
            "type": "boolean"
          },
          "attachments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentAttachmentDTO"
            }
          },
          "assignedUsers": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "deadline": {
            "type": "string"
          },
          "requiresResponse": {
            "type": "boolean"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentCommentDTO"
            }
          },
          "documentType": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "includesEnclosure": {
            "type": "boolean"
          },
          "primaryHandler": {
            "type": "boolean"
          },
          "legalDocument": {
            "type": "boolean"
          },
          "confidentialReturn": {
            "type": "boolean"
          }
        }
      },
      "PageOutgoingDocumentDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OutgoingDocumentDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageIncomingDocumentDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IncomingDocumentDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "PageDepartmentDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DepartmentDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      },
      "DashboardDTO": {
        "type": "object",
        "properties": {
          "totalDocuments": {
            "type": "integer",
            "format": "int32"
          },
          "incomingDocumentCount": {
            "type": "integer",
            "format": "int32"
          },
          "outgoingDocumentCount": {
            "type": "integer",
            "format": "int32"
          },
          "documentsByStatus": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "documentsByMonth": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "pendingDocumentCount": {
            "type": "integer",
            "format": "int64"
          },
          "pendingDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSummaryDTO"
            }
          },
          "upcomingDeadlines": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSummaryDTO"
            }
          },
          "overdueDocuments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentSummaryDTO"
            }
          },
          "overdueDocumentCount": {
            "type": "integer",
            "format": "int64"
          },
          "activeWorkPlans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkPlanSummaryDTO"
            }
          },
          "unreadNotifications": {
            "type": "integer",
            "format": "int32"
          },
          "performanceMetrics": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "DocumentSummaryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "documentNumber": {
            "type": "string"
          },
          "documentType": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "deadline": {
            "type": "string"
          },
          "assignedTo": {
            "type": "string"
          },
          "department": {
            "type": "string"
          }
        }
      },
      "WorkPlanSummaryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "title": {
            "type": "string"
          },
          "department": {
            "type": "string"
          },
          "period": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "completedTasks": {
            "type": "integer",
            "format": "int32"
          },
          "totalTasks": {
            "type": "integer",
            "format": "int32"
          },
          "progress": {
            "type": "string"
          }
        }
      },
      "PageWorkCaseDTO": {
        "type": "object",
        "properties": {
          "totalElements": {
            "type": "integer",
            "format": "int64"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "pageable": {
            "$ref": "#/components/schemas/PageableObject"
          },
          "first": {
            "type": "boolean"
          },
          "last": {
            "type": "boolean"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          },
          "content": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WorkCaseDTO"
            }
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "sort": {
            "$ref": "#/components/schemas/SortObject"
          },
          "numberOfElements": {
            "type": "integer",
            "format": "int32"
          },
          "empty": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
